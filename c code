#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
#include<limits.h>
#include<string.h>
void find_res(int arr[], int n){
    int prefix[n];
    prefix[0]=arr[0];
    for(int i=1;i<n;i++){
        prefix[i]=arr[i]+prefix[i-1];                          //Creating the prefix array
    }
    int map[2][10][2];                                         //Creating the 3D map, with arrays offcourse
    memset(&map[0][0][0], 0, sizeof(map));                     //easy way to set all the elements of the map to 0
    for(int i=0;i<n;i++){
        if(prefix[i]<0)
            map[0][prefix[i]][1]++;
        else
            map[0][prefix[i]][0]++;
        map[1][prefix[i]][0]=i;
    }
    for(int i=0;i<n;i++){
        if(prefix[i]==0){
            printf("%d\n", arr[i]);
        }
        if(prefix[i]<0){
            map[0][prefix[i]][1]--;
            if(map[0][prefix[i]][1]){
                for(int k=i+1;k<=map[1][prefix[i]][0];k++)       //This is just for Printing, dont think to be N2 time.
                    printf("%d ", arr[k]);
                printf("\n");
            }
        }
        else{
            map[0][prefix[i]][0]--;
            if(map[0][prefix[i]][0]){
                for(int k=i+1;k<=map[1][prefix[i]][0];k++)      //Same here
                    printf("%d ", arr[k]);
                printf("\n");
            }
        }
    }
}
int main() {
    int n;
    scanf("%d", &n);
    int arr[n];
    for(int i=0;i<n;i++)
        scanf("%d", &arr[i]);
    find_res(arr, n);
    return 0;
}
